{"ast":null,"code":"import _objectSpread from\"C:/xampp/htdocs/CARABIN-QUIZ/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import api from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isLoading,setIsLoading]=useState(true);const[accessExpiry,setAccessExpiry]=useState(null);// Fonction pour rafraîchir les données utilisateur\nconst refreshUserData=async()=>{try{const token=localStorage.getItem('token');if(!token)return;const response=await api.get('/auth/me',{headers:{Authorization:'Bearer ${token}'}});if(response.data){var _response$data$user$s;setUser(prev=>_objectSpread(_objectSpread(_objectSpread({},prev),response.data.user),{},{token// Conserver le token existant\n}));if((_response$data$user$s=response.data.user.subscription)!==null&&_response$data$user$s!==void 0&&_response$data$user$s.expiryDate){setAccessExpiry(new Date(response.data.user.subscription.expiryDate));}}}catch(error){console.error('Erreur de rafraîchissement:',error);}};useEffect(()=>{const loadUser=async()=>{const token=localStorage.getItem('token');if(token){try{var _response$data$user$s2;const response=await api.get('/auth/me',{headers:{Authorization:'Bearer ${token}'}});setUser(response.data.user);if((_response$data$user$s2=response.data.user.subscription)!==null&&_response$data$user$s2!==void 0&&_response$data$user$s2.expiryDate){setAccessExpiry(new Date(response.data.user.subscription.expiryDate));}}catch(error){console.error('Erreur de chargement utilisateur:',error);logout();}}setIsLoading(false);};loadUser();},[]);const login=async credentials=>{try{const response=await api.post('/auth/login',credentials);localStorage.setItem('token',response.data.token);setUser(response.data.user);return response.data;}catch(error){throw error.response.data;}};const register=async userData=>{try{const response=await api.post('/auth/register',userData);localStorage.setItem('token',response.data.token);setUser(response.data.user);return response.data;}catch(error){throw error.response.data;}};const validateAccessCode=async accessCode=>{try{const response=await api.post('/auth/validate-access-code',{accessCode},{headers:{Authorization:'Bearer ${user.token}'}});// Rafraîchir les données après validation\nawait refreshUserData();return response.data;}catch(error){throw error.response.data;}};const logout=()=>{localStorage.removeItem('token');setUser(null);setAccessExpiry(null);};const hasPremiumAccess=()=>{if(!accessExpiry)return false;return new Date()<accessExpiry;};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,isLoading,accessExpiry,login,register,validateAccessCode,logout,hasPremiumAccess,refreshUserData// Intégré dans le contexte\n},children:children});};export const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","isLoading","setIsLoading","accessExpiry","setAccessExpiry","refreshUserData","token","localStorage","getItem","response","get","headers","Authorization","data","_response$data$user$s","prev","_objectSpread","subscription","expiryDate","Date","error","console","loadUser","_response$data$user$s2","logout","login","credentials","post","setItem","register","userData","validateAccessCode","accessCode","removeItem","hasPremiumAccess","Provider","value","useAuth"],"sources":["C:/xampp/htdocs/CARABIN-QUIZ/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [accessExpiry, setAccessExpiry] = useState(null);\r\n\r\n  // Fonction pour rafraîchir les données utilisateur\r\n  const refreshUserData = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) return;\r\n      \r\n      const response = await api.get('/auth/me', {\r\n        headers: { Authorization: 'Bearer ${token}' }\r\n      });\r\n      \r\n      if (response.data) {\r\n        setUser(prev => ({ \r\n          ...prev, \r\n          ...response.data.user,\r\n          token // Conserver le token existant\r\n        }));\r\n        \r\n        if (response.data.user.subscription?.expiryDate) {\r\n          setAccessExpiry(new Date(response.data.user.subscription.expiryDate));\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur de rafraîchissement:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const response = await api.get('/auth/me', {\r\n            headers: { Authorization: 'Bearer ${token}' }\r\n          });\r\n          \r\n          setUser(response.data.user);\r\n          if (response.data.user.subscription?.expiryDate) {\r\n            setAccessExpiry(new Date(response.data.user.subscription.expiryDate));\r\n          }\r\n        } catch (error) {\r\n          console.error('Erreur de chargement utilisateur:', error);\r\n          logout();\r\n        }\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    loadUser();\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await api.post('/auth/login', credentials);\r\n      localStorage.setItem('token', response.data.token);\r\n      setUser(response.data.user);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response.data;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await api.post('/auth/register', userData);\r\n      localStorage.setItem('token', response.data.token);\r\n      setUser(response.data.user);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response.data;\r\n    }\r\n  };\r\n\r\n  const validateAccessCode = async (accessCode) => {\r\n    try {\r\n      const response = await api.post('/auth/validate-access-code', { accessCode }, {\r\n        headers: { Authorization: 'Bearer ${user.token}' }\r\n      });\r\n      \r\n      // Rafraîchir les données après validation\r\n      await refreshUserData();\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response.data;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setAccessExpiry(null);\r\n  };\r\n\r\n  const hasPremiumAccess = () => {\r\n    if (!accessExpiry) return false;\r\n    return new Date() < accessExpiry;\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{\r\n      user,\r\n      isLoading,\r\n      accessExpiry,\r\n      login,\r\n      register,\r\n      validateAccessCode,\r\n      logout,\r\n      hasPremiumAccess,\r\n      refreshUserData // Intégré dans le contexte\r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}