{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const QuizContext=/*#__PURE__*/createContext();export const QuizProvider=_ref=>{let{children}=_ref;const[quiz,setQuiz]=useState(null);const[currentQuestion,setCurrentQuestion]=useState(0);const[answers,setAnswers]=useState([]);const startQuiz=quizData=>{setQuiz(quizData);setCurrentQuestion(0);setAnswers(new Array(quizData.questions.length).fill(null));};const answerQuestion=answerIndex=>{const newAnswers=[...answers];newAnswers[currentQuestion]=answerIndex;setAnswers(newAnswers);};const nextQuestion=()=>{if(currentQuestion<quiz.questions.length-1){setCurrentQuestion(currentQuestion+1);}};const prevQuestion=()=>{if(currentQuestion>0){setCurrentQuestion(currentQuestion-1);}};const value={quiz,currentQuestion,answers,startQuiz,answerQuestion,nextQuestion,prevQuestion};return/*#__PURE__*/_jsx(QuizContext.Provider,{value:value,children:children});};export const useQuiz=()=>useContext(QuizContext);","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","QuizContext","QuizProvider","_ref","children","quiz","setQuiz","currentQuestion","setCurrentQuestion","answers","setAnswers","startQuiz","quizData","Array","questions","length","fill","answerQuestion","answerIndex","newAnswers","nextQuestion","prevQuestion","value","Provider","useQuiz"],"sources":["C:/xampp/htdocs/CARABIN-QUIZ/frontend/src/contexts/QuizContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst QuizContext = createContext();\r\n\r\nexport const QuizProvider = ({ children }) => {\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  \r\n  const startQuiz = (quizData) => {\r\n    setQuiz(quizData);\r\n    setCurrentQuestion(0);\r\n    setAnswers(new Array(quizData.questions.length).fill(null));\r\n  };\r\n  \r\n  const answerQuestion = (answerIndex) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[currentQuestion] = answerIndex;\r\n    setAnswers(newAnswers);\r\n  };\r\n  \r\n  const nextQuestion = () => {\r\n    if (currentQuestion < quiz.questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    }\r\n  };\r\n  \r\n  const prevQuestion = () => {\r\n    if (currentQuestion > 0) {\r\n      setCurrentQuestion(currentQuestion - 1);\r\n    }\r\n  };\r\n  \r\n  const value = {\r\n    quiz,\r\n    currentQuestion,\r\n    answers,\r\n    startQuiz,\r\n    answerQuestion,\r\n    nextQuestion,\r\n    prevQuestion\r\n  };\r\n  \r\n  return (\r\n    <QuizContext.Provider value={value}>\r\n      {children}\r\n    </QuizContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useQuiz = () => useContext(QuizContext);"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACS,eAAe,CAAEC,kBAAkB,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CACzD,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAE1C,KAAM,CAAAa,SAAS,CAAIC,QAAQ,EAAK,CAC9BN,OAAO,CAACM,QAAQ,CAAC,CACjBJ,kBAAkB,CAAC,CAAC,CAAC,CACrBE,UAAU,CAAC,GAAI,CAAAG,KAAK,CAACD,QAAQ,CAACE,SAAS,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAC7D,CAAC,CAED,KAAM,CAAAC,cAAc,CAAIC,WAAW,EAAK,CACtC,KAAM,CAAAC,UAAU,CAAG,CAAC,GAAGV,OAAO,CAAC,CAC/BU,UAAU,CAACZ,eAAe,CAAC,CAAGW,WAAW,CACzCR,UAAU,CAACS,UAAU,CAAC,CACxB,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAIb,eAAe,CAAGF,IAAI,CAACS,SAAS,CAACC,MAAM,CAAG,CAAC,CAAE,CAC/CP,kBAAkB,CAACD,eAAe,CAAG,CAAC,CAAC,CACzC,CACF,CAAC,CAED,KAAM,CAAAc,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAId,eAAe,CAAG,CAAC,CAAE,CACvBC,kBAAkB,CAACD,eAAe,CAAG,CAAC,CAAC,CACzC,CACF,CAAC,CAED,KAAM,CAAAe,KAAK,CAAG,CACZjB,IAAI,CACJE,eAAe,CACfE,OAAO,CACPE,SAAS,CACTM,cAAc,CACdG,YAAY,CACZC,YACF,CAAC,CAED,mBACErB,IAAA,CAACC,WAAW,CAACsB,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAlB,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAoB,OAAO,CAAGA,CAAA,GAAM3B,UAAU,CAACI,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}